resources:
  containers:
    - container: tsukuyomi
      image: ubntintrepid/tsukuyomi:latest
      options: --security-opt seccomp=unconfined

jobs:
  - job: Windows
    pool:
      vmImage: 'vs2017-win2016'
    variables:
      OPENSSL_DIR: C:\OpenSSL
      OPENSSL_VERSION: 1_1_0j
    steps:
    - script: |
        git submodule update --init --depth=1
      displayName: 'sync local registry'

    - script: |
        mkdir %OPENSSL_DIR%
        curl -sSfO http://slproweb.com/download/Win64OpenSSL-%OPENSSL_VERSION%.exe
        Win64OpenSSL-%OPENSSL_VERSION%.exe /SILENT /VERYSILENT /SP- /DIR=%OPENSSL_DIR%
      displayName: 'install OpenSSL'

    - script: |
        curl -sSf -o rustup-init.exe https://win.rustup.rs
        rustup-init.exe -y --default-toolchain stable
        set PATH=%PATH%;%USERPROFILE%\.cargo\bin
        echo '##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin'
      displayName: 'install rustup'

    - script: |
        rustup --version
        rustc --version
        cargo --version
      displayName: 'show toolchain version'

    - script: bash .ci/run_test.sh
      displayName: 'run test script'

  - job: macOS
    pool:
      vmImage: 'macOS-10.13'
    steps:
    - script: |
        git submodule update --init --depth=1
      displayName: 'sync local registry'

    - script: |
        curl -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: 'install rustup'

    - script: |
        rustup --version
        rustc --version
        cargo --version
      displayName: 'show toolchain version'

    - script: bash .ci/run_test.sh
      displayName: 'run test script'

  - job: Linux
    pool:
      vmImage: 'ubuntu-16.04'
    variables:
      CARGO_TERM_VERBOSE: true
    strategy:
      matrix:
        stable:
          rust_toolchain: stable
        beta:
          rust_toolchain: beta
        nightly:
          rust_toolchain: nightly
        minimum_supported:
          rust_toolchain: 1.31.0
    steps:
    - script: |
        git submodule update --init --depth=1
      displayName: 'sync local registry'

    - script: |
        curl -sSf https://sh.rustup.rs | sh -s -- --default-toolchain $RUST_TOOLCHAIN -y
        echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
      displayName: 'install rustup'

    - script: |
        rustup --version
        rustc --version
        cargo --version
      displayName: 'show toolchain version'

    - script: |
        rustup component add rustfmt-preview clippy-preview
      displayName: 'install supplemental components'
      condition: eq(variables['rust_toolchain'], 'stable')

    - script: bash .ci/run_test.sh
      displayName: 'run test'
      condition: ne(variables['rust_toolchain'], 'nightly')

    - script: bash .ci/run_test.sh || true
      displayName: 'run test (allow failure)'
      condition: eq(variables['rust_toolchain'], 'nightly')

    - bash: >-
        rm -rf target/doc &&
        bash .ci/build_doc.sh &&
        bash .ci/deploy_doc.sh
      displayName: 'deploy API doc'
      condition: eq(variables['rust_toolchain'], 'stable')
      env:
        GH_TOKEN: $(myGitHubToken)

  - job: linux_coverage
    displayName: Linux (coverage test)
    pool:
      vmImage: 'ubuntu-16.04'
    container: tsukuyomi
    steps:
    - script: |
        git submodule update --init --depth=1
      displayName: 'sync local registry'
    - script: |
        cargo --version
        rustc --version
        kcov --version
      displayName: show tool versions
    - script: bash .ci/run_coverage_test.sh
      displayName: 'run coverage test'
      env:
        CODECOV_TOKEN: $(myCodecovToken)
